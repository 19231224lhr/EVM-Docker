version: '3.5'

# net config
networks:         # 设置容器使用的网络
  backend:        # 网络名字
    driver: ${NETWORKS_DRIVER}    #设置网络模式，这里为桥接（bridge）

# service container config
services: 
  golang:
    build: 
      context: ./golang          # 指定构建使用的 Dockerfile 文件
    environment:                # 从.env文件中设置时区
      - TZ=${TZ}
    privileged: true
    volumes:                    # 容器数据的挂载路径
      - ${CODE_PATH_HOST}:/usr/src/code
    ports:                      # golang容器对外开放的接口
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8003:8003"
    stdin_open: true
    tty: true
    networks:
      - backend
    restart: always
  
  etcd:                                  # 自定义容器名称
    build:
      context: ./etcd                    # 指定构建使用的 Dockerfile 文件
    environment:
      - TZ=${TZ}
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    ports:                               # 设置端口映射
      - "${ETCD_PORT}:2379"
    networks:
      - backend
    restart: always

  etcd-manage:
    build:
      context: ./etcd-manage
    environment:
      - TZ=${TZ}
    ports:
      - "${ETCD_MANAGE_PORT}:8080"                    # 设置容器8080端口映射指定宿主机端口，用于宿主机访问可视化web
    depends_on:                                       # 依赖容器
      - etcd                                          # 在 etcd 服务容器启动后启动
    networks:
      - backend
    restart: always

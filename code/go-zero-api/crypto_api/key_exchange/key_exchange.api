syntax = "v1"

info(
	title: "key_exchange api"
	desc: "key_exchange api"
	author: "hanser"
	email: "1836080103@qq.com"
)

type (
	// GenerateKey Req None dh
	// GenerateKey Res dh
	GenerateKeyRes {
		SecretA string `json:"SecretA"`
		SecretB string `json:"SecretB"`
	}

	// GenerateKeyEcdh Req None
	// GenerateKeyEcdh Res
	GenerateKeyEcdh {
		SecretA string `json:"secretA"`
		SecretB string `json:"secretB"`
	}

	// GenerateKeySt Req
	GenerateKeyStReq {
		Name      string `json:"name"` // name = req1, req2, req3
		Str1      string `json:"str1"`
		Str2      string `json:"str2"`
		Req_r     string `json:"reqr"`     // req2
		Req_pub1  string `json:"reqpub1"`  // req2
		Req_pub2  string `json:"reqpub2"`  // req2,req3
		Req_P     string `json:"reqP"`     // req3
		Req_R     string `json:"reqR"`     // req3
		Req_priv1 string `json:"reqPriv1"` // req3
		Req_priv2 string `json:"reqPriv2"` // req3
	}
	// GenerateKeySt Res
	GenerateKeyStRes {
		Priv1 string `json:"priv1"` // req1
		Pub1  string `json:"pub1"`  // req1
		Priv2 string `json:"priv2"` // req1
		Pub2  string `json:"pub2"`  // req1
		P     string `json:"p"`     // req2
		R     string `json:"r"`     // req2
		T     bool   `json:"t"`		// req3
		Priv  string `json:"priv"` // req3
	}
)

service key_exchange-api {
	@handler GenerateKey
	get /crypto/generatekey returns (GenerateKeyRes)
	
	@handler GenerateKeyEcdh
	get /crypto/generatekeyecdh returns (GenerateKeyEcdh)
	
	@handler GenerateKeySt
	get /crypto/generatekeyst (GenerateKeyStReq) returns (GenerateKeyStRes)    // notion xiaoxie
	// if return null or nothing means error point in curve
}

// test auto saving